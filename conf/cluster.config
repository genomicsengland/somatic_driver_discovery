// TRE configuration
includeConfig 'modules.config'

params {
    // TRE/Helix HPC configuration
    executor            = 'lsf'
    cache               = 'lenient'
    queue               = { task.attempt < 2 ? 'short' : 'medium' }
    cpus                = { 1 + (task.attempt - 1) }
    memory              = { 2.GB + (1.GB * (task.attempt - 1)) }
    cluster_options     = '-P Bio'
    error_strategy      = { task.exitStatus in [130, 137, 139] ? 'retry' : 'finish' }
    max_retries         = 3
    queue_size          = 5000
    poll_interval       = '30 sec'
    exit_read_timeout   = '30 sec'
    debug               = true
    is_cloud            = false

    // Containers
    dndscv_container = containers.dndscv_container
    mutenrich_container = containers.mutenrich_container
    oncodrivefml_container = containers.oncodrivefml_container
    linux_container= containers.linux_container
    bcftools_container  = containers.bcftools_container
    python_container    = containers.python_container

    // Singularity options
    singularity_enabled     = true
    singularity_auto_mounts = true
    singularity_cache       = 'singularity'
    singularity_run_options = """\
        --bind /resources:/resources \
        --bind /nas/weka.gel.zone/resources:/nas/weka.gel.zone/resources \
        --bind /public_data_resources/ensembl_cds/MANE/:/mnt/  \
        --bind /gel_data_resources/main_programme/normalised_vcf_cancer_dragen/GRCh38/:/gel_data_resources/main_programme/normalised_vcf_cancer_dragen/GRCh38/ \
        --bind /re_scratch/cb_ind/coad:/vcfs/""".stripIndent()
}


singularity {
    enabled     = params.singularity_enabled
    autoMounts  = params.singularity_auto_mounts
    cacheDir    = params.singularity_cache
    runOptions  = params.singularity_run_options
}



executor {
    name            = params.executor
    queueSize       = params.queue_size
    pollInterval    = params.poll_interval
    exitReadTimeout = params.exit_read_timeout
}


process {
    container       = params.linux_container
    errorStrategy   = params.error_strategy
    maxRetries      = params.max_retries
    cpus            = params.cpus
    queue           = params.queue
    memory          = params.memory
    cache           = params.cache
    clusterOptions  = params.cluster_options
    debug           = params.debug

    withName: VALIDATE_ARGS {
        container   = params.python_container
    }

    withName: INDEX_VCFS {
        container   = params.bcftools_container
    }

    withName: AGGREGATE_INPUT {
        container   = params.bcftools_container
    }


}



